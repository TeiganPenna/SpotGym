# .github/workflows/ci.yml
# GitHub Actions documentation
# => https://docs.github.com/en/actions
name: runTests

on:
  push:
    branches:
      - main
  pull_request:
env:
  # Increment this to manually invalidate the cache.
  CACHE_VERSION: 1
jobs:
  checks:
    name: Checks
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      - run: ./.github/scripts/ci_clear_gradle_cache.sh

      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ env.CACHE_VERSION }}-${{ hashFiles('**/**.gradle', '**/gradle/wrapper/gradel-wrapper.properties') }}

      - name: Setup and execute Gradle 'lint' task
        uses: gradle/gradle-build-action@v2
        with:
          arguments: lint

      - name: Execute Gradle 'ktlintCheck' task
        uses: gradle/gradle-build-action@v2
        with:
          arguments: ktlintCheck

      - name: Execute Gradle 'detekt' task
        uses: gradle/gradle-build-action@v2
        with:
          arguments: detekt

      - name: Upload reports
        uses: actions/upload-artifact@v2
        with:
          name: Check-Reports
          path: app/build/reports
        if: always()

  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      - run: ./.github/scripts/ci_clear_gradle_cache.sh

      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ env.CACHE_VERSION }}-${{ hashFiles('**/**.gradle', '**/gradle/wrapper/gradel-wrapper.properties') }}

      - name: Setup and execute Gradle 'test' task
        uses: gradle/gradle-build-action@v2
        with:
          arguments: test

      - name: Upload reports
        uses: actions/upload-artifact@v2
        with:
          name: Test-Reports
          path: app/build/reports
        if: failure()

  instrumentation-tests:
    name: Instrumentation tests
    if: ${{ false }} # disable for now
    runs-on: macos-latest # use macos to take advantage of haxm
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      - run: ./.github/scripts/ci_clear_gradle_cache.sh

      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ env.CACHE_VERSION }}-${{ hashFiles('**/**.gradle', '**/gradle/wrapper/gradel-wrapper.properties') }}

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ env.CACHE_VERSION }}-x86_64-30

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Run instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew connectedCheck

      - name: Upload reports
        uses: actions/upload-artifact@v2
        with:
          name: Instrumentation-Test-Reports
          path: app/build/reports
        if: failure()

  build-and-sign:
    name: Build and Sign APK
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [checks, unit-tests] # instrumentation-tests
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      - run: ./.github/scripts/ci_clear_gradle_cache.sh

      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ env.CACHE_VERSION }}-${{ hashFiles('**/**.gradle', '**/gradle/wrapper/gradel-wrapper.properties') }}

      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.KEYSTORE }}
        run: |
            TMP_KEYSTORE_FILE_PATH="${RUNNER_TEMP}"/keystore
            mkdir "${TMP_KEYSTORE_FILE_PATH}"
            echo $ENCODED_STRING | base64 -di > "${TMP_KEYSTORE_FILE_PATH}"/keystore.jks

      - name: Setup and execute Gradle 'assembleRelease' task
        uses: gradle/gradle-build-action@v2
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
        with:
          arguments: app:assembleRelease

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Build-Artifacts
          path: app/build/outputs